[
    {
        "id": "f5edda837d1e2f4c",
        "type": "server-state-changed",
        "z": "cd5dfc2c408d8b02",
        "name": "Снял с зарядки",
        "server": "d1cf8bd60e4ddc69",
        "version": 5,
        "outputs": 2,
        "exposeAsEntityConfig": "f0f1cfb7774312ed",
        "entityId": "sensor.pixel_4_xl_battery_state",
        "entityIdType": "exact",
        "outputInitially": false,
        "stateType": "str",
        "ifState": "discharging",
        "ifStateType": "str",
        "ifStateOperator": "is",
        "outputOnlyOnStateChange": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 100,
        "y": 1040,
        "wires": [
            [
                "bd10a1add8be17d9"
            ],
            []
        ]
    },
    {
        "id": "d2ad4f0fc68d15c6",
        "type": "ha-wait-until",
        "z": "cd5dfc2c408d8b02",
        "name": "Движение ванная",
        "server": "d1cf8bd60e4ddc69",
        "version": 2,
        "outputs": 1,
        "entityId": "binary_sensor.dvizhenie_v_vannoi_occupancy",
        "entityIdFilterType": "exact",
        "property": "state",
        "comparator": "is",
        "value": "on",
        "valueType": "str",
        "timeout": "0",
        "timeoutType": "num",
        "timeoutUnits": "seconds",
        "checkCurrentState": true,
        "blockInputOverrides": true,
        "outputProperties": [],
        "entityLocation": "data",
        "entityLocationType": "none",
        "x": 350,
        "y": 980,
        "wires": [
            [
                "bb0a892c696e45be"
            ]
        ]
    },
    {
        "id": "d5d071b0fa8d2205",
        "type": "time-range-switch",
        "z": "cd5dfc2c408d8b02",
        "name": "",
        "lat": "58.602",
        "lon": "49.574",
        "startTime": "08:00",
        "endTime": "09:00",
        "startOffset": 0,
        "endOffset": 0,
        "x": 1030,
        "y": 1000,
        "wires": [
            [
                "abf471e2d30b3252"
            ],
            []
        ]
    },
    {
        "id": "d9142ec17d6ef46d",
        "type": "server-state-changed",
        "z": "cd5dfc2c408d8b02",
        "name": "Сняла с зарядки",
        "server": "d1cf8bd60e4ddc69",
        "version": 5,
        "outputs": 2,
        "exposeAsEntityConfig": "f0f1cfb7774312ed",
        "entityId": "sensor.iphone_amina_battery_state",
        "entityIdType": "exact",
        "outputInitially": false,
        "stateType": "str",
        "ifState": "Not Charging",
        "ifStateType": "str",
        "ifStateOperator": "is",
        "outputOnlyOnStateChange": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 100,
        "y": 940,
        "wires": [
            [
                "e8eee18d55e57fa6"
            ],
            []
        ]
    },
    {
        "id": "833638fb46693160",
        "type": "comment",
        "z": "cd5dfc2c408d8b02",
        "name": "Когда проснулись",
        "info": "",
        "x": 110,
        "y": 880,
        "wires": []
    },
    {
        "id": "64bcbdf261f7e7ff",
        "type": "comment",
        "z": "cd5dfc2c408d8b02",
        "name": "Уведомления через станцию",
        "info": "",
        "x": 140,
        "y": 840,
        "wires": []
    },
    {
        "id": "bb0a892c696e45be",
        "type": "delay",
        "z": "cd5dfc2c408d8b02",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 330,
        "y": 1020,
        "wires": [
            [
                "0fa400a500c59fed"
            ]
        ]
    },
    {
        "id": "96e745434757ce99",
        "type": "api-current-state",
        "z": "cd5dfc2c408d8b02",
        "name": "Рабочий день?",
        "server": "d1cf8bd60e4ddc69",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "binary_sensor.workday_sensor",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1020,
        "y": 940,
        "wires": [
            [
                "d5d071b0fa8d2205"
            ],
            []
        ]
    },
    {
        "id": "20a9e1eaebf1cbbc",
        "type": "time-range-switch",
        "z": "cd5dfc2c408d8b02",
        "name": "",
        "lat": "58.602",
        "lon": "49.574",
        "startTime": "08:00",
        "endTime": "11:00",
        "startOffset": 0,
        "endOffset": 0,
        "x": 330,
        "y": 940,
        "wires": [
            [
                "d2ad4f0fc68d15c6"
            ],
            []
        ]
    },
    {
        "id": "e8eee18d55e57fa6",
        "type": "api-current-state",
        "z": "cd5dfc2c408d8b02",
        "name": "Амина дома",
        "server": "d1cf8bd60e4ddc69",
        "version": 3,
        "outputs": 2,
        "halt_if": "home",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "person.amina",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 110,
        "y": 1000,
        "wires": [
            [
                "20a9e1eaebf1cbbc"
            ],
            []
        ]
    },
    {
        "id": "bd10a1add8be17d9",
        "type": "api-current-state",
        "z": "cd5dfc2c408d8b02",
        "name": "Артём дома",
        "server": "d1cf8bd60e4ddc69",
        "version": 3,
        "outputs": 2,
        "halt_if": "home",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "person.test",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 110,
        "y": 1100,
        "wires": [
            [
                "20a9e1eaebf1cbbc"
            ],
            []
        ]
    },
    {
        "id": "0fa400a500c59fed",
        "type": "function",
        "z": "cd5dfc2c408d8b02",
        "name": "Рандомное приветствие",
        "func": "var greetings = [\n    \"Привет-привет\",\n    \"Здравствуйте\",\n    \"Доброго времени суток\",\n    \"Приветик\",\n    \"Рада видеть вас\",\n    \"Приветствую всех\",\n    \"Салют\",\n    \"Приветствую\"\n];\n\nvar randomGreeting = greetings[Math.floor(Math.random() * greetings.length)];\n\nmsg.payload = randomGreeting;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 940,
        "wires": [
            [
                "8f3de178da9cbe48"
            ]
        ]
    },
    {
        "id": "d9188378162476fe",
        "type": "api-current-state",
        "z": "cd5dfc2c408d8b02",
        "name": "Погода",
        "server": "d1cf8bd60e4ddc69",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "weather.yandex_weather",
        "state_type": "str",
        "blockInputOverrides": true,
        "outputProperties": [
            {
                "property": "feels_like",
                "propertyType": "msg",
                "value": "$entity().attributes.feels_like",
                "valueType": "jsonata"
            },
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 820,
        "y": 940,
        "wires": [
            [
                "cd9fed08b86c274b"
            ]
        ]
    },
    {
        "id": "705b0251d17cde86",
        "type": "api-call-service",
        "z": "cd5dfc2c408d8b02",
        "name": "станция ",
        "server": "d1cf8bd60e4ddc69",
        "version": 5,
        "debugenabled": false,
        "domain": "media_player",
        "service": "play_media",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.yandex_station_ff98f0298db423d52af3700a"
        ],
        "data": "{\"media_content_id\":\" {{payload}} \",\"media_content_type\":\"text\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 820,
        "y": 1060,
        "wires": [
            [
                "ed9830f6f31bf51b"
            ]
        ]
    },
    {
        "id": "ed9830f6f31bf51b",
        "type": "ha-wait-until",
        "z": "cd5dfc2c408d8b02",
        "name": "IDLE",
        "server": "d1cf8bd60e4ddc69",
        "version": 2,
        "outputs": 1,
        "entityId": "sensor.alice_state",
        "entityIdFilterType": "exact",
        "property": "state",
        "comparator": "is",
        "value": "IDLE",
        "valueType": "str",
        "timeout": 0,
        "timeoutType": "num",
        "timeoutUnits": "seconds",
        "checkCurrentState": true,
        "blockInputOverrides": true,
        "outputProperties": [],
        "x": 810,
        "y": 1120,
        "wires": [
            [
                "96e745434757ce99"
            ]
        ]
    },
    {
        "id": "8f3de178da9cbe48",
        "type": "api-call-service",
        "z": "cd5dfc2c408d8b02",
        "name": "станция ",
        "server": "d1cf8bd60e4ddc69",
        "version": 5,
        "debugenabled": false,
        "domain": "media_player",
        "service": "play_media",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.yandex_station_ff98f0298db423d52af3700a"
        ],
        "data": "{\"media_content_id\":\" {{payload}} \",\"media_content_type\":\"text\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 540,
        "y": 1000,
        "wires": [
            [
                "d3a9af1885da3f52"
            ]
        ]
    },
    {
        "id": "d3a9af1885da3f52",
        "type": "ha-wait-until",
        "z": "cd5dfc2c408d8b02",
        "name": "IDLE",
        "server": "d1cf8bd60e4ddc69",
        "version": 2,
        "outputs": 1,
        "entityId": "sensor.alice_state",
        "entityIdFilterType": "exact",
        "property": "state",
        "comparator": "is",
        "value": "IDLE",
        "valueType": "str",
        "timeout": 0,
        "timeoutType": "num",
        "timeoutUnits": "seconds",
        "checkCurrentState": true,
        "blockInputOverrides": true,
        "outputProperties": [],
        "x": 530,
        "y": 1060,
        "wires": [
            [
                "d9188378162476fe"
            ]
        ]
    },
    {
        "id": "cd9fed08b86c274b",
        "type": "function",
        "z": "cd5dfc2c408d8b02",
        "name": "Погода",
        "func": "// Получаем данные о погоде из payload\nvar weatherData = msg.payload;\n\n// Получаем данные о погоде из payload\nvar weatherData = msg.payload;\n\n// Извлекаем необходимые данные\nvar yandexCondition = weatherData.attributes.yandex_condition;\nvar temperature = weatherData.attributes.temperature;\nvar feelsLike = weatherData.attributes.feels_like;\n\n// Приведение температуры и ощущаемой температуры к строковому типу с правильным форматом\ntemperature = temperature + \" °C\";\nfeelsLike = feelsLike + \" °C\";\n\n// Формируем сообщение о погоде\nvar weatherMessage = \"Сейчас на улице \" + yandexCondition + \", температура \" + temperature + \", ощущается как \" + feelsLike + \".\";\n\n// Записываем сообщение в свойство payload для передачи дальше\nmsg.payload = weatherMessage;\n\n// Возвращаем измененное сообщение\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1000,
        "wires": [
            [
                "705b0251d17cde86"
            ]
        ]
    },
    {
        "id": "abf471e2d30b3252",
        "type": "function",
        "z": "cd5dfc2c408d8b02",
        "name": "function 12",
        "func": "// Функция для вычисления количества минут до 09:00\nfunction minutesUntilNine() {\n    // Получаем текущее время\n    var now = new Date();\n    \n    // Задаем время 09:00 на текущий день\n    var nineAM = new Date();\n    nineAM.setHours(9, 0, 0, 0); // Устанавливаем часы и минуты\n    \n    // Если текущее время уже больше 09:00, то на следующий день\n    if (now.getHours() >= 9) {\n        nineAM.setDate(nineAM.getDate() + 1);\n    }\n    \n    // Вычисляем разницу во времени между текущим временем и 09:00\n    var difference = nineAM.getTime() - now.getTime();\n    \n    // Переводим разницу в минуты\n    var minutes = Math.floor(difference / (1000 * 60));\n    \n    return minutes;\n}\n\n// Создаем объект msg.payload и добавляем в него количество минут до 09:00\nvar minutesLeft = minutesUntilNine();\nvar minutesPhrase = \"минут\";\nif (minutesLeft === 1) {\n    minutesPhrase = \"минута\";\n} else if (minutesLeft % 10 >= 2 && minutesLeft % 10 <= 4 && (minutesLeft % 100 < 10 || minutesLeft % 100 >= 20)) {\n    minutesPhrase = \"минуты\";\n}\n\n// Создаем массив разнообразных фраз\nvar phrases = [\n    \"До автобуса осталось \" + minutesLeft + \" \" + minutesPhrase,\n    \"Автобус приедет через \" + minutesLeft + \" \" + minutesPhrase,\n    \"Ещё \" + minutesLeft + \" \" + minutesPhrase + \", и автобус уедет\"\n];\n\n// Выбираем случайную фразу из массива\nvar randomIndex = Math.floor(Math.random() * phrases.length);\nmsg.payload = phrases[randomIndex];\n\n// Возвращаем измененное сообщение\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1060,
        "wires": [
            [
                "e46561f040b32a59"
            ]
        ]
    },
    {
        "id": "e46561f040b32a59",
        "type": "api-call-service",
        "z": "cd5dfc2c408d8b02",
        "name": "станция ",
        "server": "d1cf8bd60e4ddc69",
        "version": 5,
        "debugenabled": false,
        "domain": "media_player",
        "service": "play_media",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.yandex_station_ff98f0298db423d52af3700a"
        ],
        "data": "{\"media_content_id\":\" {{payload}} \",\"media_content_type\":\"text\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1020,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "d1cf8bd60e4ddc69",
        "type": "server",
        "name": "Home Assistant",
        "version": 5,
        "addon": true,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": "30",
        "areaSelector": "friendlyName",
        "deviceSelector": "friendlyName",
        "entitySelector": "friendlyName",
        "statusSeparator": ": ",
        "statusYear": "hidden",
        "statusMonth": "short",
        "statusDay": "numeric",
        "statusHourCycle": "default",
        "statusTimeFormat": "h:m",
        "enableGlobalContextStore": false
    },
    {
        "id": "f0f1cfb7774312ed",
        "type": "ha-entity-config",
        "server": "d1cf8bd60e4ddc69",
        "deviceConfig": "",
        "name": "nr_uvedomlenia_pogoda_vann",
        "version": "6",
        "entityType": "switch",
        "haConfig": [
            {
                "property": "name",
                "value": "nr_uvedomlenia_pogoda_vann"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": "switch"
            }
        ],
        "resend": false,
        "debugEnabled": false
    }
]
